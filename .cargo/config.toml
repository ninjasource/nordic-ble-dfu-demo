[target.'cfg(all(target_arch = "arm", target_os = "none"))']
runner = "probe-run --chip nRF52840_xxAA"

rustflags = [
  # LLD (shipped with the Rust toolchain) is used as the default linker
  "-C", "link-arg=--nmagic",
  "-Z", "trap-unreachable=no",
  "-C", "link-arg=-Tlink.x",
  "-C", "link-arg=-Tdefmt.x",

  # if you run into problems with LLD switch to the GNU linker by commenting out
  # this line
  # "-C", "linker=arm-none-eabi-ld",

  # if you need to link to pre-compiled C libraries provided by a C toolchain
  # use GCC as the linker by commenting out both lines above and then
  # uncommenting the three lines below
  # "-C", "linker=arm-none-eabi-gcc",
  # "-C", "link-arg=-Wl,-Tlink.x",
  # "-C", "link-arg=-nostartfiles",
]

[build]
target = "thumbv7em-none-eabihf" # Cortex-M4F and Cortex-M7F (with FPU)

[alias]
#run_central = "run --bin central -- --probe 1366:1015:000683491076" # 
#run_peripheral = "run --bin peripheral -- --probe 1366:1015:000683104986" 
run_central = "run --release --bin central -- --probe 1366:1015:000683104986"
run_peripheral = "run --release --bin peripheral -- --probe 1366:1015:000683491076" 

#run_rgb_flash_test = "run --bin rgb_flash_test -- --probe 1366:1015:000683491076" 
#run_central_release = "run --release --bin central -- --probe 1366:1015:000683491076" 
# run_peripheral = "run --bin peripheral -- --probe 1366:1015:000683491076" 